- name: Deploy Docker Compose Application
  hosts: remote-hosts
  become: true
  vars:
    domain: summarize.amtmann.de
    email: summarize@amtmann.de
    path: /opt/dhbw-cc2

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install required system packages
      apt:
        name: ['apt-transport-https', 'ca-certificates', 'curl', 'gnupg', 'lsb-release']
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: "https://download.docker.com/linux/ubuntu/gpg"
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        update_cache: yes

    - name: Install Docker
      apt:
        name: docker-ce
        state: present

    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: '0755'
  
    - name: Copy project files to remote VM
      synchronize:
        src: .
        dest: /opt/
        delete: yes
        recursive: yes

    - name: Create certs and certs-data directories
      ansible.builtin.file:
        path: "{{ path }}/{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - certs
        - certs-data
        - challenges

    - name: Install pip
      apt:
        name: python3-pip
        state: present

    - name: Install Docker SDK for Python
      ansible.builtin.pip:
        name: docker
        state: present
        executable: pip3

    - name: Install docker-compose Python library
      ansible.builtin.pip:
        name: docker-compose
        state: present
        executable: pip3

    - name: Create nginx certbot challenge responder
      docker_container:
        name: dhbw-cc2-certbot-nginx
        image: nginx:latest
        state: started
        restart_policy: always
        ports:
          - "80:80"
        volumes:
          - "{{ path }}/certbot-challenge-responder:/etc/nginx/conf.d"
          - "{{ path }}/challenges:/var/www/challenges"
          - "{{ path }}/certs:/etc/letsencrypt"

    
    - name: pause
      ansible.builtin.pause:
        seconds: 300

    - name: Request initial SSL certificate
      ansible.builtin.command:
        cmd: >
          docker run -it --rm
          -v "{{ path }}/certs:/etc/letsencrypt"
          -v "{{ path }}/certs-data:/data/letsencrypt"
          -v "{{ path }}/challenges:/var/www/challenges"
          --name certbot
          certbot/certbot
          certonly --webroot
          --webroot-path /var/www/challenges
          --email {{ email }}
          --agree-tos
          --no-eff-email
          --staging
          -d {{ domain }}
      args:
        chdir: "{{ path }}"
      ignore_errors: yes

    - name: Stop Docker Compose application if running
      docker_compose:
        project_src: "{{ path }}"
        state: absent
      ignore_errors: yes

    - name: Deploy Docker Compose application
      docker_compose:
        project_src: "{{ path }}"
        state: present
        pull: yes
        build: yes
        remove_orphans: yes
      register: output
